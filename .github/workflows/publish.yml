name: Publish Python distribution to PyPI

on:
  push:
    tags:
      - 'v*'   # Triggers on any tag starting with 'v' (e.g., v1.0.0)

jobs:
  build:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # macos-13 is an intel runner, macos-14 is apple silicon
        os: [ubuntu-latest, windows-latest, macos-13, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.0.0

      - uses: actions/upload-artifact@v4
        with:
          name: uaibot-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build sdist
        run: |
          python -m pip install build
          python -m build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: uaibot-sdist
          path: dist/*.tar.gz

  publish-to-pypi:
    name: Publish Python distribution to PyPI
    needs: [build, build_sdist]
    runs-on: ubuntu-latest

    environment:
      name: pypi
      url: https://pypi.org/p/uaibot

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        pattern: uaibot-*
        path: dist
        merge-multiple: true
    - name: Publish distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: Create GitHub Release and Upload SDist
    needs: [build_sdist, publish-to-pypi]
    runs-on: ubuntu-latest

    permissions:
      contents: write  # Required to create releases and upload assets

    steps:
      - name: Download sdist artifact
        uses: actions/download-artifact@v4
        with:
          name: uaibot-sdist
          path: dist

      - name: Get the version from tag
        id: get_tag
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_tag.outputs.TAG }}
          name: Release ${{ steps.get_tag.outputs.TAG }}
          files: dist/*.tar.gz
          draft: false
          prerelease: false
